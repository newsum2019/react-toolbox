@import "../variables";
@import "../mixins";

$input-padding: 2 * $unit;
$input-field-height: 1.6 * $unit;
$input-field-padding: .8 * $unit;
$input-field-font-size: 1.6 * $unit;
$input-label-font-size: 1.2 * $unit;
$input-focus-label-top: .6 * $unit;
$input-text-background-color: transparent !default;
$input-text-label-color: unquote("rgba(#{$color-black}, 0.26)") !default;
$input-text-bottom-border-color: unquote("rgba(#{$color-black}, 0.12)") !default;
$input-text-highlight-color: unquote("rgb(#{$color-primary})") !default;
$input-text-disabled-color: $input-text-bottom-border-color !default;
$input-text-disabled-text-color: $input-text-label-color !default;
$input-text-error-color: unquote("rgb(222, 50, 38)") !default;

.root {
  position: relative;
  padding: $input-padding 0;
}

.input {
  display: block;
  width: 100%;
  padding: $input-field-padding 0;
  font-size: $input-field-font-size;
  color: $color-text;
  background-color: $input-text-background-color;
  border: 0;
  border-bottom: 1px solid $input-text-bottom-border-color;
  outline: none;

  &:focus {
    ~ .bar:before, ~ .bar:after {
      width: 50%;
    }

    ~ .label:not(.fixed) {
      color: $input-text-highlight-color;
    }
  }

  &:focus, &.filled {
    ~ .label:not(.fixed) {
      top: $input-focus-label-top;
      font-size: $input-label-font-size;
    }
  }

  &.filled ~ .label.fixed {
    display: none;
  }
}

.label {
  position: absolute;
  top: $input-padding + $input-field-padding;
  left: 0;
  font-size: $input-field-font-size;
  line-height: $input-field-font-size;
  color: $input-text-label-color;
  pointer-events: none;
  transition-timing-function: $animation-curve-default;
  transition-duration: $animation-duration;
  transition-property: top, font-size, color;
}

.bar {
  position: relative;
  display: block;
  width: 100%;

  &:before, &:after {
    @include material-animation-default();
    position: absolute;
    bottom: 0;
    width: 0;
    height: 2px;
    content: "";
    background-color: $input-text-highlight-color;
    transition-property: width, background-color;
  }

  &:before {
    left: 50%;
  }

  &:after {
    right: 50%;
  }
}

.error {
  font-size: $input-label-font-size;
  line-height: 1.6 * $unit;
  color: $input-text-error-color;
}

.disabled > .input {
  color: $input-text-disabled-text-color;
  border-bottom-style: dotted;
}

.errored {
  padding-bottom: 0;

  > .input {
    border-bottom-color: $input-text-error-color;

    &:focus {
      ~ .label:not(.fixed) {
        color: $input-text-error-color;
      }

      ~ .bar:before, ~ .bar:after {
        background-color: $input-text-error-color;
      }
    }
  }
}

.hidden {
  display: none;
}
